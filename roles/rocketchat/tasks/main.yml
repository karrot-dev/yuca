- name: Import Mongo GPG signing key
  apt_key:
    url: "https://www.mongodb.org/static/pgp/server-4.2.asc"
    state: present

- name: Add mongodb repository
  apt_repository:
    repo: deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main
    state: present
    update_cache: true

- name: Install dependencies
  apt:
    name:
      # nodejs is installed via server-base
      - build-essential
      - graphicsmagick
      - python3-pymongo # for ansible mongodb tools

- name: Install mongodb
  apt:
    name: "mongodb-org"
    state: "latest"

- name: Start/enable mongodb
  systemd:
    name: "mongod"
    enabled: true
    state: started

- name: Create dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ rocketchat__user }}"
    group: "{{ rocketchat__group }}"
  loop:
    - "{{ rocketchat__root }}"
    - "{{ rocketchat__root }}/versions"
  tags:
    - upgrade

- name: Check if version exists
  stat:
    path: "{{ rocketchat__latest }}"
  register: rocketchat__latest_stat
  tags:
    - upgrade

- name: Download rocketchat
  when: not rocketchat__latest_stat.stat.exists
  block:

    - name: Create temporary download directory
      tempfile:
        state: directory
        suffix: "rocketchat-{{ rocketchat__version }}"
      register: download_dir

    - name: Fetch archive
      unarchive:
        src: "https://releases.rocket.chat/{{ rocketchat__version }}/download"
        dest: "{{ download_dir.path }}"
        remote_src: yes
        owner: "{{ rocketchat__user }}"
        group: "{{ rocketchat__group }}"

    - name: Move download to versions dir
      command: "mv {{ download_dir.path }}/bundle {{ rocketchat__latest }}"

  tags:
    - upgrade

- name: npm install
  npm:
    path: "{{ rocketchat__latest }}/programs/server"
  notify:
    - restart rocketchat
  tags:
    - upgrade

- name: symlink latest
  file:
    src: "{{ rocketchat__latest }}"
    dest: "{{ rocketchat__current }}"
    state: link
  tags:
    - upgrade

- name: rocketchat systemd service
  template:
    src: rocketchat.service
    dest: "/etc/systemd/system/{{ rocketchat__service_name }}.service"
  notify:
    - restart rocketchat
  tags:
    - upgrade

- name: Start/enable rocketchat
  systemd:
    name: "{{ rocketchat__service_name }}"
    enabled: true
    state: started
    daemon_reload: yes

- name: Enable mongo replicaset
  blockinfile:
    path: /etc/mongod.conf
    block: |
      replication:
        replSetName: {{ rocketchat__replicaset_name }}

- name: Restart mongodb
  systemd:
    name: "mongod"
    state: restarted

- name: Initialize mongo replicaset
  mongodb_replicaset:
    replica_set: "{{ rocketchat__replicaset_name }}"
    members:
      - "localhost:27017"
    validate: no

- name: nginx config
  template:
    src: nginx.conf
    dest: /etc/nginx/sites-available/{{ site }}
  notify:
    - reload nginx

- name: nginx sites-enabled symlink
  file:
    src: /etc/nginx/sites-available/{{ site }}
    dest: /etc/nginx/sites-enabled/{{ site }}
    state: link
  notify:
    - reload nginx